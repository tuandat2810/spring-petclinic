# Sử dụng phiên bản CircleCI 2.1
version: 2.1

# Orbs là các gói cấu hình có thể tái sử dụng.
# Ở đây chúng ta dùng orb `maven` của CircleCI để đơn giản hóa các tác vụ với Maven.
orbs:
  maven: circleci/maven@1.4.1

# Workflows định nghĩa thứ tự thực thi của các jobs.
workflows:
  # Tên của workflow
  build_and_test_workflow:
    jobs:
      # Tên của job sẽ chạy
      - build_and_test

# Jobs là tập hợp các bước được thực thi trong một môi trường.
jobs:
  build_and_test:
    # Môi trường thực thi, ở đây là một Docker image có cài sẵn Java 11.
    docker:
      - image: cimg/openjdk:17.0

    # Các bước thực thi tuần tự trong job
    steps:
      # Bước 1: Tải mã nguồn từ GitHub về môi trường thực thi
      - checkout

      # Bước 2: Khôi phục cache (nếu có) để tăng tốc độ build
      # Key cache được tạo dựa trên nội dung tệp pom.xml
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # Fallback nếu không tìm thấy cache chính xác
            - v1-dependencies-

      # Bước 3: Tải các thư viện phụ thuộc của dự án bằng Maven
      - run:
          name: "Download Dependencies"
          command: mvn dependency:go-offline

      # Bước 4: Lưu cache các thư viện vừa tải về cho các lần chạy sau
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # Bước 5: Chạy kiểm thử (unit tests và integration tests)
      # Lệnh `mvn verify` sẽ build, test và kiểm tra tích hợp dự án
      - run:
          name: "Run Tests"
          command: mvn verify

      # Bước 6 (Tùy chọn): Lưu trữ kết quả kiểm thử để xem trên giao diện CircleCI
      - store_test_results:
          path: target/surefire-reports

      # Bước 7 (Tùy chọn): Lưu trữ file JAR đã được build
      - store_artifacts:
          path: target/spring-petclinic.jar